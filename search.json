[{"path":"https://bedapub.github.io/cd8ippred/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 cd8ippred authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://bedapub.github.io/cd8ippred/articles/cd8_ip_predict.html","id":"confusion-matrix","dir":"Articles","previous_headings":"","what":"Confusion matrix","title":"Predict CD8 immune phenotypes","text":"View data.frame predictions","code":"with(   pred,   table(truth, predicted.class) ) #>           predicted.class #> truth      desert excluded inflamed #>   desert       15        5        0 #>   excluded      1       18        1 #>   inflamed      0        2       18 head(pred) #>      prob.inflamed prob.excluded prob.desert predicted.class n_out_of_range #> ffc0    0.10191362     0.1731693   0.7249171          desert              0 #> fd98    0.21714803     0.5062805   0.2765715        excluded              0 #> 46d7    0.19156818     0.5225662   0.2858657        excluded              0 #> c877    0.15159548     0.2483887   0.6000158          desert              0 #> eddf    0.10275997     0.3010333   0.5962067          desert              0 #> 3dba    0.05888132     0.2506064   0.6905123          desert              0 #>       truth #> ffc0 desert #> fd98 desert #> 46d7 desert #> c877 desert #> eddf desert #> 3dba desert"},{"path":"https://bedapub.github.io/cd8ippred/articles/cd8_ip_predict.html","id":"auc-scores","dir":"Articles","previous_headings":"","what":"AUC scores","title":"Predict CD8 immune phenotypes","text":"Please note, real data. AUC scores example. ROC curve","code":"auc_df <- pred |>   filter(!is.na(truth)) |>   pivot_longer(starts_with(\"prob.\"), names_prefix = \"prob.\", names_to = \".level\", values_to = \"prob\") |>   mutate(positive = as.factor(truth == .level)) |>   group_by(.level) |>   yardstick::roc_auc(positive, prob, event_level = \"second\") |>   rename(AUC = .estimate, class = .level) |>   select(class, AUC) %>%   mutate(AUC_text = paste0(\"AUC=\", round(AUC, 3)))  select(auc_df, -AUC_text) #> # A tibble: 3 × 2 #>   class      AUC #>   <chr>    <dbl> #> 1 desert   0.945 #> 2 excluded 0.854 #> 3 inflamed 0.996 pheno_col <- c(   inflamed = \"#d95f02\",   excluded = \"#1b9e77\",   desert = \"#7570b3\" )  pred |>   filter(!is.na(truth)) |>   # column names should match levels of the truth factor   yardstick::roc_curve(truth, all_of(paste0(\"prob.\", levels(pred$truth)))) |>   mutate(class = .level) |>   ggplot() +   aes(x = 1 - specificity, y = sensitivity, col = class) +   geom_path() +   geom_abline(lty = 3) +   coord_equal() +   geom_text(aes(label = AUC_text), x = 0.55, y = 0.1, data = auc_df, show.legend = FALSE) +   facet_wrap(~class, ncol = 2) +   scale_color_manual(values = pheno_col) +   theme_bw() devtools::session_info() #> ─ Session info ─────────────────────────────────────────────────────────────── #>  setting  value #>  version  R version 4.3.1 (2023-06-16) #>  os       Ubuntu 22.04.3 LTS #>  system   x86_64, linux-gnu #>  ui       X11 #>  language en #>  collate  C.UTF-8 #>  ctype    C.UTF-8 #>  tz       UTC #>  date     2023-08-31 #>  pandoc   2.19.2 @ /usr/bin/ (via rmarkdown) #>  #> ─ Packages ─────────────────────────────────────────────────────────────────── #>  ! package              * version   date (UTC) lib source #>  P abind                  1.4-5     2016-07-21 [?] RSPM (R 4.3.0) #>  P assertthat             0.2.1     2019-03-21 [?] RSPM (R 4.3.0) #>  P Biobase              * 2.60.0    2023-04-25 [?] Bioconductor #>  P BiocGenerics         * 0.46.0    2023-04-25 [?] Bioconductor #>  P BiocManager            1.30.22   2023-08-08 [?] RSPM (R 4.3.0) #>  P BiocParallel           1.34.2    2023-05-22 [?] Bioconductor #>  P bitops                 1.0-7     2021-04-24 [?] RSPM (R 4.3.0) #>  P bslib                  0.5.1     2023-08-11 [?] RSPM (R 4.3.0) #>  P cachem                 1.0.8     2023-05-01 [?] RSPM (R 4.3.0) #>  P callr                  3.7.3     2022-11-02 [?] RSPM (R 4.3.0) #>    cd8ippred            * 0.1.0     2023-08-31 [1] local #>  P cli                    3.6.1     2023-03-23 [?] RSPM (R 4.3.0) #>  P codetools              0.2-19    2023-02-01 [?] CRAN (R 4.3.1) #>  P colorspace             2.1-0     2023-01-23 [?] RSPM (R 4.3.0) #>  P crayon                 1.5.2     2022-09-29 [?] RSPM (R 4.3.0) #>  P DelayedArray           0.26.7    2023-07-28 [?] Bioconductor #>  P desc                   1.4.2     2022-09-08 [?] RSPM (R 4.3.0) #>  P DESeq2                 1.40.2    2023-06-23 [?] Bioconductor #>  P devtools               2.4.5     2022-10-11 [?] RSPM (R 4.3.0) #>  P digest                 0.6.33    2023-07-07 [?] RSPM (R 4.3.0) #>  P dplyr                * 1.1.2     2023-04-20 [?] RSPM (R 4.3.0) #>  P ellipsis               0.3.2     2021-04-29 [?] RSPM (R 4.3.0) #>  P evaluate               0.21      2023-05-05 [?] RSPM (R 4.3.0) #>  P fansi                  1.0.4     2023-01-22 [?] RSPM (R 4.3.0) #>  P farver                 2.1.1     2022-07-06 [?] RSPM (R 4.3.0) #>  P fastmap                1.1.1     2023-02-24 [?] RSPM (R 4.3.0) #>  P foreach                1.5.2     2022-02-02 [?] RSPM (R 4.3.0) #>  P fs                     1.6.3     2023-07-20 [?] RSPM (R 4.3.0) #>  P generics               0.1.3     2022-07-05 [?] RSPM (R 4.3.0) #>  P GenomeInfoDb           1.36.2    2023-08-25 [?] Bioconductor #>  P GenomeInfoDbData       1.2.10    2023-08-31 [?] Bioconductor #>  P GenomicRanges          1.52.0    2023-04-25 [?] Bioconductor #>  P ggplot2              * 3.4.3     2023-08-14 [?] RSPM (R 4.3.0) #>  P glmnet                 4.1-8     2023-08-22 [?] RSPM (R 4.3.0) #>  P glue                   1.6.2     2022-02-24 [?] RSPM (R 4.3.0) #>  P gtable                 0.3.4     2023-08-21 [?] RSPM (R 4.3.0) #>  P highr                  0.10      2022-12-22 [?] RSPM (R 4.3.0) #>  P htmltools              0.5.6     2023-08-10 [?] RSPM (R 4.3.0) #>  P htmlwidgets            1.6.2     2023-03-17 [?] RSPM (R 4.3.0) #>  P httpuv                 1.6.11    2023-05-11 [?] RSPM (R 4.3.0) #>  P IRanges                2.34.1    2023-06-22 [?] Bioconductor #>  P iterators              1.0.14    2022-02-05 [?] RSPM (R 4.3.0) #>  P jquerylib              0.1.4     2021-04-26 [?] RSPM (R 4.3.0) #>  P jsonlite               1.8.7     2023-06-29 [?] RSPM (R 4.3.0) #>  P knitr                  1.43      2023-05-25 [?] RSPM (R 4.3.0) #>  P labeling               0.4.3     2023-08-29 [?] RSPM (R 4.3.0) #>  P later                  1.3.1     2023-05-02 [?] RSPM (R 4.3.0) #>  P lattice                0.21-8    2023-04-05 [?] CRAN (R 4.3.1) #>  P lifecycle              1.0.3     2022-10-07 [?] RSPM (R 4.3.0) #>  P locfit                 1.5-9.8   2023-06-11 [?] RSPM (R 4.3.0) #>  P magrittr               2.0.3     2022-03-30 [?] RSPM (R 4.3.0) #>  P Matrix                 1.6-1     2023-08-14 [?] RSPM (R 4.3.0) #>  P MatrixGenerics         1.12.3    2023-07-30 [?] Bioconductor #>  P matrixStats            1.0.0     2023-06-02 [?] RSPM (R 4.3.0) #>  P memoise                2.0.1     2021-11-26 [?] RSPM (R 4.3.0) #>  P mime                   0.12      2021-09-28 [?] RSPM (R 4.3.0) #>  P miniUI                 0.1.1.1   2018-05-18 [?] RSPM (R 4.3.0) #>  P munsell                0.5.0     2018-06-12 [?] RSPM (R 4.3.0) #>  P pillar                 1.9.0     2023-03-22 [?] RSPM (R 4.3.0) #>  P pkgbuild               1.4.2     2023-06-26 [?] RSPM (R 4.3.0) #>  P pkgconfig              2.0.3     2019-09-22 [?] RSPM (R 4.3.0) #>  P pkgdown                2.0.7     2022-12-14 [?] RSPM (R 4.3.0) #>  P pkgload                1.3.2.1   2023-07-08 [?] RSPM (R 4.3.0) #>  P prettyunits            1.1.1     2020-01-24 [?] RSPM (R 4.3.0) #>  P processx               3.8.2     2023-06-30 [?] RSPM (R 4.3.0) #>  P profvis                0.3.8     2023-05-02 [?] RSPM (R 4.3.0) #>  P promises               1.2.1     2023-08-10 [?] RSPM (R 4.3.0) #>  P ps                     1.7.5     2023-04-18 [?] RSPM (R 4.3.0) #>  P purrr                  1.0.2     2023-08-10 [?] RSPM (R 4.3.0) #>  P R6                     2.5.1     2021-08-19 [?] RSPM (R 4.3.0) #>  P ragg                   1.2.5     2023-01-12 [?] RSPM (R 4.3.0) #>  P Rcpp                   1.0.11    2023-07-06 [?] RSPM (R 4.3.0) #>  P RCurl                  1.98-1.12 2023-03-27 [?] RSPM (R 4.3.0) #>  P remotes                2.4.2.1   2023-07-18 [?] RSPM (R 4.3.0) #>    renv                   1.0.2     2023-08-15 [2] RSPM (R 4.3.0) #>  P rlang                  1.1.1     2023-04-28 [?] RSPM (R 4.3.0) #>  P rmarkdown              2.24      2023-08-14 [?] RSPM (R 4.3.0) #>  P rprojroot              2.0.3     2022-04-02 [?] RSPM (R 4.3.0) #>  P S4Arrays               1.0.5     2023-07-24 [?] Bioconductor #>  P S4Vectors              0.38.1    2023-05-02 [?] Bioconductor #>  P sass                   0.4.7     2023-07-15 [?] RSPM (R 4.3.0) #>  P scales                 1.2.1     2022-08-20 [?] RSPM (R 4.3.0) #>  P sessioninfo            1.2.2     2021-12-06 [?] RSPM (R 4.3.0) #>  P shape                  1.4.6     2021-05-19 [?] RSPM (R 4.3.0) #>  P shiny                  1.7.5     2023-08-12 [?] RSPM (R 4.3.0) #>  P stringi                1.7.12    2023-01-11 [?] RSPM (R 4.3.0) #>  P stringr                1.5.0     2022-12-02 [?] RSPM (R 4.3.0) #>  P SummarizedExperiment   1.30.2    2023-06-06 [?] Bioconductor #>  P survival               3.5-7     2023-08-14 [?] RSPM (R 4.3.0) #>  P systemfonts            1.0.4     2022-02-11 [?] RSPM (R 4.3.0) #>  P textshaping            0.3.6     2021-10-13 [?] RSPM (R 4.3.0) #>  P tibble                 3.2.1     2023-03-20 [?] RSPM (R 4.3.0) #>  P tidyr                * 1.3.0     2023-01-24 [?] RSPM (R 4.3.0) #>  P tidyselect             1.2.0     2022-10-10 [?] RSPM (R 4.3.0) #>  P urlchecker             1.0.1     2021-11-30 [?] RSPM (R 4.3.0) #>  P usethis                2.2.2     2023-07-06 [?] RSPM (R 4.3.0) #>  P utf8                   1.2.3     2023-01-31 [?] RSPM (R 4.3.0) #>  P vctrs                  0.6.3     2023-06-14 [?] RSPM (R 4.3.0) #>  P withr                  2.5.0     2022-03-03 [?] RSPM (R 4.3.0) #>  P xfun                   0.40      2023-08-09 [?] RSPM (R 4.3.0) #>  P xtable                 1.8-4     2019-04-21 [?] RSPM (R 4.3.0) #>  P XVector                0.40.0    2023-04-25 [?] Bioconductor #>  P yaml                   2.3.7     2023-01-23 [?] RSPM (R 4.3.0) #>  P yardstick              1.2.0     2023-04-21 [?] RSPM (R 4.3.0) #>  P zlibbioc               1.46.0    2023-04-25 [?] Bioconductor #>  #>  [1] /tmp/RtmpUE9JGi/temp_libpath145834ad72a8 #>  [2] /home/runner/.cache/R/renv/library/cd8ippred-05538736/R-4.3/x86_64-pc-linux-gnu #>  [3] /home/runner/.cache/R/renv/sandbox/R-4.3/x86_64-pc-linux-gnu/5cd49154 #>  #>  P ── Loaded and on-disk path mismatch. #>  #> ──────────────────────────────────────────────────────────────────────────────"},{"path":"https://bedapub.github.io/cd8ippred/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Iakov . Davydov. Author, maintainer, copyright holder. Martha Serrano. Contributor, copyright holder. Petra Schwalie. Contributor, copyright holder. F. Hoffman-La Roche. Copyright holder, funder.","code":""},{"path":"https://bedapub.github.io/cd8ippred/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Davydov II (2023). cd8ippred: Predict CD8 immune phenotypes based RNA-Seq data. https://bedapub.github.io/cd8ippred/, https://github.com/bedapub/cd8ippred.","code":"@Manual{,   title = {cd8ippred: Predict CD8 immune phenotypes based on the RNA-Seq data},   author = {Iakov I. Davydov},   year = {2023},   note = {https://bedapub.github.io/cd8ippred/, https://github.com/bedapub/cd8ippred}, }"},{"path":"https://bedapub.github.io/cd8ippred/index.html","id":"cd8ippred","dir":"","previous_headings":"","what":"Predict CD8 immune phenotypes based on the RNA-Seq data","title":"Predict CD8 immune phenotypes based on the RNA-Seq data","text":"package contains ElasticNet model can use RNA-Seq data predict immune phenotypes samples. Warning: RNA-Seq expression values can strongly affected experimental protocol data processing. running prediction make sure data comparable data used training dataset. simple way check compare data load_simulated_counts().","code":""},{"path":"https://bedapub.github.io/cd8ippred/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Predict CD8 immune phenotypes based on the RNA-Seq data","text":"can install development version cd8ippred like :","code":"remotes::install_github(\"bedapub/cd8ippred\")"},{"path":"https://bedapub.github.io/cd8ippred/index.html","id":"usage-example","dir":"","previous_headings":"","what":"Usage example","title":"Predict CD8 immune phenotypes based on the RNA-Seq data","text":"See .","code":""},{"path":"https://bedapub.github.io/cd8ippred/reference/cd8ip_features_distribution.html","id":null,"dir":"Reference","previous_headings":"","what":"A data.frame with feature distribution simulated from kernel-density\nestimates based on the training data. — cd8ip_features_distribution","title":"A data.frame with feature distribution simulated from kernel-density\nestimates based on the training data. — cd8ip_features_distribution","text":"based DESeq2::vst() transformation. can used compare data training data, without revealing training data directly.","code":""},{"path":"https://bedapub.github.io/cd8ippred/reference/cd8ip_features_distribution.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A data.frame with feature distribution simulated from kernel-density\nestimates based on the training data. — cd8ip_features_distribution","text":"","code":"cd8ip_features_distribution"},{"path":"https://bedapub.github.io/cd8ippred/reference/cd8ip_features_distribution.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A data.frame with feature distribution simulated from kernel-density\nestimates based on the training data. — cd8ip_features_distribution","text":"object class data.frame 100000 rows 92 columns.","code":""},{"path":"https://bedapub.github.io/cd8ippred/reference/cd8ip_vst_dispersion_f.html","id":null,"dir":"Reference","previous_headings":"","what":"Dispersion function generated on the training dataset. — cd8ip_vst_dispersion_f","title":"Dispersion function generated on the training dataset. — cd8ip_vst_dispersion_f","text":"Dispersion function generated training dataset.","code":""},{"path":"https://bedapub.github.io/cd8ippred/reference/cd8ip_vst_dispersion_f.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dispersion function generated on the training dataset. — cd8ip_vst_dispersion_f","text":"","code":"cd8ip_vst_dispersion_f(q)"},{"path":"https://bedapub.github.io/cd8ippred/reference/compute_vst.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply DESeq2::vst() transformation to the data. — compute_vst","title":"Apply DESeq2::vst() transformation to the data. — compute_vst","text":"use DESeq2::dispersionFunction() learned dataset used model creation.","code":""},{"path":"https://bedapub.github.io/cd8ippred/reference/compute_vst.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply DESeq2::vst() transformation to the data. — compute_vst","text":"","code":"compute_vst(matr)"},{"path":"https://bedapub.github.io/cd8ippred/reference/compute_vst.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply DESeq2::vst() transformation to the data. — compute_vst","text":"matr Input raw counts matrix.","code":""},{"path":"https://bedapub.github.io/cd8ippred/reference/compute_vst.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply DESeq2::vst() transformation to the data. — compute_vst","text":"matrix transformed values. R Matrix rows genes, matrix columns samples.","code":""},{"path":"https://bedapub.github.io/cd8ippred/reference/compute_vst.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Apply DESeq2::vst() transformation to the data. — compute_vst","text":"pipeline/protocol different one used training, probably need use sort batch-correction.","code":""},{"path":"https://bedapub.github.io/cd8ippred/reference/ecdf_pvals.html","id":null,"dir":"Reference","previous_headings":"","what":"Given a matrix of observations, computes p-values for out of range features. — ecdf_pvals","title":"Given a matrix of observations, computes p-values for out of range features. — ecdf_pvals","text":"every observation function compute two-sided p-value based stats::ecdf(). tell unlikely observe value given reference distribution.use Holm's method correct p-values every observation return number significantly --range features.","code":""},{"path":"https://bedapub.github.io/cd8ippred/reference/ecdf_pvals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Given a matrix of observations, computes p-values for out of range features. — ecdf_pvals","text":"","code":"ecdf_pvals(obs, reference = NULL)"},{"path":"https://bedapub.github.io/cd8ippred/reference/ecdf_pvals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Given a matrix of observations, computes p-values for out of range features. — ecdf_pvals","text":"obs matrix observation, every column variable every row observation reference either data.frame reference variable distributions list stats::ecdf functions computed based reference distribution. NULL, cd8ip_features_distribution used.","code":""},{"path":"https://bedapub.github.io/cd8ippred/reference/ecdf_pvals.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Given a matrix of observations, computes p-values for out of range features. — ecdf_pvals","text":"data.frame p-values","code":""},{"path":"https://bedapub.github.io/cd8ippred/reference/get_n_out_of_range.html","id":null,"dir":"Reference","previous_headings":"","what":"Given a matrix of observations, computes how many features are out of range. — get_n_out_of_range","title":"Given a matrix of observations, computes how many features are out of range. — get_n_out_of_range","text":"See ecdf_pvals() details. use Holm's method correct p-values every observation return number significantly --range features.","code":""},{"path":"https://bedapub.github.io/cd8ippred/reference/get_n_out_of_range.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Given a matrix of observations, computes how many features are out of range. — get_n_out_of_range","text":"","code":"get_n_out_of_range(obs, reference, thr = 0.01)"},{"path":"https://bedapub.github.io/cd8ippred/reference/get_n_out_of_range.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Given a matrix of observations, computes how many features are out of range. — get_n_out_of_range","text":"obs matrix observation, every column variable every row observation reference either data.frame reference variable distributions list stats::ecdf functions computed based reference distribution. NULL, cd8ip_features_distribution used. thr p-value threshold","code":""},{"path":"https://bedapub.github.io/cd8ippred/reference/get_n_out_of_range.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Given a matrix of observations, computes how many features are out of range. — get_n_out_of_range","text":"vector number --range features every sample","code":""},{"path":"https://bedapub.github.io/cd8ippred/reference/load_simulated_counts.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulated RNA-Seq counts, an Biobase::ExpressionSet object. — load_simulated_counts","title":"Simulated RNA-Seq counts, an Biobase::ExpressionSet object. — load_simulated_counts","text":"Samples CD8IMMPH column available simulated based feature values real samples respective CD8 immune phenotypes. Samples without information simulated based complete feature distribution (irrespective CD8 immune phenotype).","code":""},{"path":"https://bedapub.github.io/cd8ippred/reference/load_simulated_counts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulated RNA-Seq counts, an Biobase::ExpressionSet object. — load_simulated_counts","text":"","code":"load_simulated_counts()"},{"path":"https://bedapub.github.io/cd8ippred/reference/load_simulated_counts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulated RNA-Seq counts, an Biobase::ExpressionSet object. — load_simulated_counts","text":"Biobase::ExpressionSet","code":""},{"path":"https://bedapub.github.io/cd8ippred/reference/predict_cd8ip.html","id":null,"dir":"Reference","previous_headings":"","what":"Predict a CD8 immune phenotype using RNA-Seq data. — predict_cd8ip","title":"Predict a CD8 immune phenotype using RNA-Seq data. — predict_cd8ip","text":"Predict CD8 immune phenotype using RNA-Seq data.","code":""},{"path":"https://bedapub.github.io/cd8ippred/reference/predict_cd8ip.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predict a CD8 immune phenotype using RNA-Seq data. — predict_cd8ip","text":"","code":"predict_cd8ip(df)"},{"path":"https://bedapub.github.io/cd8ippred/reference/predict_cd8ip.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predict a CD8 immune phenotype using RNA-Seq data. — predict_cd8ip","text":"df data.frame row corresponding single observation. data.frame columns available cd8ip_features_distribution. Feature values based DESeq2::vst() transformation.","code":""},{"path":"https://bedapub.github.io/cd8ippred/reference/predict_cd8ip.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predict a CD8 immune phenotype using RNA-Seq data. — predict_cd8ip","text":"data.frame() class probabilities (prob.inflamed, prob.excluded, prob.desert) -likely class predicted.class. n_out_of_range column indicates many range features sample. case 6 features range, predictions NAs.","code":""},{"path":"https://bedapub.github.io/cd8ippred/reference/two_sided_p.html","id":null,"dir":"Reference","previous_headings":"","what":"Computes a two-sided p-value from a one-sided p-value. — two_sided_p","title":"Computes a two-sided p-value from a one-sided p-value. — two_sided_p","text":"Computes two-sided p-value one-sided p-value.","code":""},{"path":"https://bedapub.github.io/cd8ippred/reference/two_sided_p.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computes a two-sided p-value from a one-sided p-value. — two_sided_p","text":"","code":"two_sided_p(p)"},{"path":"https://bedapub.github.io/cd8ippred/reference/two_sided_p.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computes a two-sided p-value from a one-sided p-value. — two_sided_p","text":"p vector p-values","code":""},{"path":"https://bedapub.github.io/cd8ippred/reference/two_sided_p.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Computes a two-sided p-value from a one-sided p-value. — two_sided_p","text":"vector two-sided p-values","code":""}]
